@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');

.pageContainer {
  font-family: 'Poppins', sans-serif;
  min-height: 100vh;
  /* Updated gradient using Slate colours */
  background: linear-gradient(120deg, var(--slate-50), var(--slate-100), var(--slate-200));
  padding: 2rem 1rem;
  animation: gradientBackground 15s ease infinite;
  background-size: 400% 400%;
}

@keyframes gradientBackground {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.taskCard {
  max-width: 64rem;
  margin: 0 auto;
  background-color: white;
  border-radius: 1.5rem;
  overflow: hidden;
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1),
              0 10px 10px -5px rgba(0, 0, 0, 0.04);
  transition: transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275),
              box-shadow 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  position: relative;
}

.taskCard.scrolled {
  position: relative;
  z-index: 10;
  transform: translateY(-10px);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
}

.taskCard:hover {
  transform: translateY(-5px);
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
              0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.taskHeader {
  /* Updated gradient using Indigo colours */
  background: linear-gradient(135deg, var(--indigo-500), var(--indigo-700));
  padding: 2rem 1.5rem;
  color: white;
  position: relative;
  overflow: hidden;
}

.taskHeader::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 60%);
  transform: rotate(30deg);
  pointer-events: none;
}

.taskHeaderContent {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  gap: 1.5rem;
  position: relative;
  z-index: 1;
}

.titleSection {
  flex: 1;
  min-width: 250px;
}

.taskTitle {
  font-size: 2.25rem;
  font-weight: bold;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  margin-bottom: 1rem;
  position: relative;
  transition: transform 0.3s ease, text-shadow 0.3s ease;
}

.taskTitle:hover {
  transform: translateY(-2px);
  text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.taskBadges {
  display: flex;
  gap: 0.75rem;
  align-items: center;
  flex-wrap: wrap;
}

.taskId {
  background-color: rgba(255, 255, 255, 0.2);
  padding: 0.5rem 1rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 600;
  letter-spacing: 0.05em;
  display: inline-flex;
  align-items: center;
  transition: all 0.3s ease;
}

.taskId:hover {
  background-color: rgba(255, 255, 255, 0.3);
  transform: translateY(-2px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.priorityBadge {
  display: inline-flex;
  align-items: center;
  padding: 0.5rem 1rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 600;
  background-color: rgba(255, 255, 255, 0.2);
  transition: all 0.3s ease;
}

.priority1 {
  background-color: rgba(34, 197, 94, 0.2);
}

.priority2 {
  background-color: rgba(234, 179, 8, 0.2);
}

.priority3 {
  background-color: rgba(239, 68, 68, 0.2);
}

.priorityContainer {
  display: flex;
  align-items: center;
  gap: 2px;
}

.starIcon {
  transition: transform 0.3s ease, color 0.3s ease;
}

.starFilled {
  color: #fbbf24;
}

.starEmpty {
  color: rgba(255, 255, 255, 0.5);
}

.starIcon:hover {
  transform: scale(1.2) rotate(5deg);
}

.progressSection {
  min-width: 200px;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.progressBarContainer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.progressBarTrack {
  height: 0.75rem;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 9999px;
  overflow: hidden;
}

.progressBarFill {
  height: 100%;
  background: linear-gradient(90deg, #22c55e, #10b981);
  border-radius: 9999px;
  transition: width 0.5s ease-out;
  position: relative;
  overflow: hidden;
}

.progressBarFill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg, 
    rgba(255,255,255,0) 0%, 
    rgba(255,255,255,0.3) 50%, 
    rgba(255,255,255,0) 100%
  );
  animation: shine 2s infinite;
}

@keyframes shine {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.progressText {
  font-size: 0.875rem;
  color: rgba(255, 255, 255, 0.9);
  font-weight: 600;
}

.progressButton {
  background-color: rgba(255, 255, 255, 0.2);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.progressButton:hover {
  background-color: rgba(255, 255, 255, 0.3);
  transform: translateY(-2px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.taskContent {
  padding: 2rem;
}

.section {
  margin-bottom: 2.5rem;
  animation: fadeIn 0.5s ease-out;
  border-radius: 0.75rem;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.sectionHovered {
  transform: translateY(-3px);
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
              0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.sectionHeader {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 0.5rem;
  position: relative;
  padding: 1rem;
  border-radius: 0.75rem;
  /* Updated to use a neutral background */
  background-color: rgba(var(--slate-50-rgb, 248,250,252), 0.7);
  transition: background-color 0.3s ease, transform 0.3s ease;
}

.sectionHeaderOpen {
  /* Alternatively, a slightly different neutral tone */
  background-color: rgba(var(--slate-100-rgb, 241,245,249), 0.7);
}

.collapsibleHeader {
  cursor: pointer;
  transition: all 0.3s ease;
}

.collapsibleHeader:hover {
  background-color: rgba(var(--indigo-500-rgb, 99,102,241), 0.1);
}

.iconWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: rgba(var(--indigo-500-rgb, 99,102,241), 0.1);
  transition: all 0.3s ease;
}

.sectionIcon {
  /* Using Indigo for icons */
  color: var(--indigo-500);
  transition: transform 0.3s ease;
}

.sectionHovered .sectionIcon {
  transform: scale(1.1);
}

.chevronIcon {
  transition: transform 0.3s ease;
}

.rotated {
  transform: rotate(0deg);
}

.sectionTitle {
  font-size: 1.5rem;
  font-weight: 600;
  /* Using a dark neutral tone */
  color: var(--slate-800);
  flex-grow: 1;
  transition: color 0.3s ease;
}

.sectionHovered .sectionTitle {
  color: var(--indigo-500);
}

.sectionContentWrapper {
  overflow: hidden;
  transition: max-height 0.5s ease, opacity 0.5s ease, transform 0.5s ease;
}

.contentVisible {
  opacity: 1;
  transform: translateY(0);
}

.contentHidden {
  opacity: 0;
  transform: translateY(-10px);
}

.sectionContent {
  /* Updated text colour to use a neutral tone */
  color: var(--slate-600);
  line-height: 1.625;
  font-size: 1.125rem;
  padding: 1rem;
}

.instructionHeading {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--indigo-700); /* Updated to use Indigo from your palette */
  margin-top: 1.5rem;
  margin-bottom: 0.75rem;
  padding-bottom: 0.25rem;
  border-bottom: 1px solid rgba(var(--indigo-500-rgb, 99,102,241), 0.3);
}

.instructionSubheading {
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--indigo-600); /* Updated to use Indigo from your palette */
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

.instructionsSection {
  /* Updated to use Indigo tones for a soft background */
  background-color: var(--indigo-50);
  border-radius: 0.75rem;
  padding: 1.5rem;
  border-left: 4px solid var(--indigo-500);
  position: relative;
  height: 400px;         /* Set a fixed height */
  overflow-y: auto;      /* Enable vertical scrolling */
  transition: all 0.3s ease;
}

.instructionsSection:hover {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
              0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

.instructionsSection::after {
  content: '';
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100px;
  height: 100px;
  background: radial-gradient(circle, rgba(var(--indigo-500-rgb, 99,102,241), 0.1) 0%, rgba(var(--indigo-500-rgb, 99,102,241), 0) 70%);
  border-radius: 50%;
  pointer-events: none;
}

.tipBox {
  margin-top: 1rem;
  padding: 1rem;
  background-color: rgba(var(--indigo-500-rgb, 99,102,241), 0.1);
  border-radius: 0.5rem;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.02);
  }
}

.tipIcon {
  color: var(--indigo-500);
}

.descriptionContent {
  position: relative;
  line-height: 1.8;
}

.resourcesContent {
  background-color: var(--indigo-50);
  border-radius: 0.75rem;
  padding: 1.5rem;
  border: 1px solid var(--indigo-200);
  margin-bottom: 2rem;
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.resourcesContent:hover {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
              0 4px 6px -2px rgba(0, 0, 0, 0.05);
  transform: translateY(-3px);
}

.resources {
  white-space: pre-wrap;
  color: var(--slate-600);
  font-family: "Courier New", Courier, monospace;
}

.link {
  /* Updated link colour */
  color: var(--indigo-600);
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  transition: all 0.3s ease;
  text-decoration: none;
  position: relative;
}

.linkIcon {
  width: 16px;
  height: 16px;
  transition: transform 0.3s ease;
}

.link:hover {
  color: var(--indigo-700);
}

.link:hover .linkIcon {
  transform: rotate(45deg);
}

.link::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 2px;
  background-color: currentColor;
  transition: width 0.3s ease;
}

.link:hover::after {
  width: 100%;
}

.secretKeyContainer {
  background-color: var(--slate-800);
  border-radius: 0.75rem;
  padding: 1.5rem;
  margin-top: 2rem;
  border: 1px solid var(--slate-700);
  position: relative;
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  overflow: hidden;
}

.secretKeyHovered {
  transform: translateY(-5px);
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.3),
              0 10px 10px -5px rgba(0, 0, 0, 0.2);
}

.secretKeyContainer::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(var(--indigo-500-rgb, 99,102,241), 0.1) 0%, rgba(var(--indigo-500-rgb, 99,102,241), 0) 60%);
  transform: rotate(30deg);
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.5s ease;
}

.secretKeyHovered::before {
  opacity: 1;
}

.secretKeyHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.secretKeyTitle {
  font-size: 1.25rem;
  font-weight: 600;
  color: white;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.lockIcon {
  color: var(--indigo-300);
  transition: transform 0.3s ease;
}

.lockIconPulse {
  animation: pulse 2s infinite;
}

.secretKeyActions {
  display: flex;
  gap: 0.75rem;
}

.iconButton {
  padding: 0.5rem 0.75rem;
  border-radius: 0.375rem;
  color: white;
  background-color: var(--slate-700);
  transition: all 0.3s ease;
  font-size: 0.875rem;
  font-weight: 500;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.iconButton:hover {
  background-color: var(--slate-600);
  transform: translateY(-2px);
}

.iconButtonSuccess {
  background-color: #065f46;
}

.secretKeyValue {
  font-family: "Courier New", Courier, monospace;
  font-size: 1.25rem;
  color: var(--indigo-300);
  letter-spacing: 0.1em;
  transition: all 0.3s ease;
  user-select: none;
}

.revealed {
  color: #93c5fd;
  text-shadow: 0 0 5px rgba(96, 165, 250, 0.5);
}

.copySuccess {
  color: #10b981;
}

.toast {
  position: absolute;
  bottom: -3rem;
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--slate-800);
  color: white;
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
              0 4px 6px -2px rgba(0, 0, 0, 0.05);
  animation: fadeInOut 2s ease-in-out;
}

@keyframes fadeInOut {
  0% {
    opacity: 0;
    transform: translate(-50%, 1rem);
  }
  15% {
    opacity: 1;
    transform: translate(-50%, 0);
  }
  85% {
    opacity: 1;
    transform: translate(-50%, 0);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -1rem);
  }
}

.notFoundContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: var(--slate-50);
}

.notFoundContent {
  background-color: white;
  border-radius: 1rem;
  padding: 2rem;
  text-align: center;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
              0 4px 6px -2px rgba(0, 0, 0, 0.05);
  max-width: 500px;
}

.notFoundTitle {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--slate-800);
  margin-bottom: 1rem;
}

.notFoundText {
  color: var(--slate-500);
}

.taskMeta {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  margin-top: 2rem;
  margin-bottom: 2rem;
  padding: 1rem;
  background-color: var(--slate-50);
  border-radius: 0.75rem;
}

.metaItem {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.3s ease;
}

.metaItemDue {
  background-color: rgba(255, 229, 229, 0.8);
  color: #ef4444;
}

.metaItemCategory {
  background-color: var(--indigo-100);
  color: var(--indigo-500);
}

.metaItemReminder {
  background-color: #fef3c7;
  color: #d97706;
  cursor: pointer;
}

.metaItemReminder:hover {
  background-color: #fde68a;
  transform: translateY(-2px);
}

.metaIcon {
  transition: transform 0.3s ease;
}

.metaItem:hover .metaIcon {
  transform: scale(1.2);
}

.confetti {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 100;
  background-image: 
    radial-gradient(circle, #ff0000 1px, transparent 1px),
    radial-gradient(circle, #00ff00 1px, transparent 1px),
    radial-gradient(circle, #0000ff 1px, transparent 1px),
    radial-gradient(circle, #ffff00 1px, transparent 1px),
    radial-gradient(circle, #ff00ff 1px, transparent 1px);
  background-size: 5% 5%;
  animation: confettiRain 3s linear;
}

@keyframes confettiRain {
  0% {
    background-position: 
      0% 0%,
      20% 20%,
      40% 40%,
      60% 60%,
      80% 80%;
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  100% {
    background-position: 
      20% 100%,
      40% 100%,
      60% 100%,
      80% 100%,
      100% 100%;
    opacity: 0;
  }
}

/* ----------------- Modal (Instructions Popup) Styles ----------------- */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 60;
  animation: fadeIn 0.3s ease;
}

.modalContent {
  background: white;
  border-radius: 1rem;
  max-width: 42rem;
  width: 90%;
  max-height: 90vh;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.2);
}

.modalHeader {
  background: linear-gradient(135deg, var(--indigo-500), var(--indigo-700));
  padding: 1.5rem;
  color: white;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modalHeader h1 {
  font-size: 1.75rem;
  margin: 0;
}

.modalCloseButton {
  background: rgba(255, 255, 255, 0.2);
  border: none;
  border-radius: 9999px;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.modalCloseButton:hover {
  background: rgba(255, 255, 255, 0.3);
}

.modalBody {
  padding: 1.5rem;
  overflow-y: auto;
  flex: 1;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
